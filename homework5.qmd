---
title: "homework5"
author: "Andy Powers"
format: html
---

# Homework 5

## Context

### Datasets

Our dataset comes from the UCI ML repository and describes secondary education in two Portuguese schools.

[Data dictionary](https://archive.ics.uci.edu/ml/datasets/Student+Performance)

[Dataset](https://archive.ics.uci.edu/dataset/320/student+performance)

Dictionary text:

-   1 school - student's school (binary: 'GP' - Gabriel Pereira or 'MS' - Mousinho da Silveira)

-   2 sex - student's sex (binary: 'F' - female or 'M' - male)

-   3 age - student's age (numeric: from 15 to 22)

-   4 address - student's home address type (binary: 'U' - urban or 'R' - rural)

-   5 famsize - family size (binary: 'LE3' - less or equal to 3 or 'GT3' - greater than 3)

-   6 Pstatus - parent's cohabitation status (binary: 'T' - living together or 'A' - apart)

-   7 Medu - mother's education (numeric: 0 - none, 1 - primary education (4th grade), 2 â€“ 5th to 9th grade, 3 â€“ secondary - education or 4 â€“ higher education)

-   8 Fedu - father's education (numeric: 0 - none, 1 - primary education (4th grade), 2 â€“ 5th to 9th grade, 3 â€“ secondary - education or 4 â€“ higher education)

-   9 Mjob - mother's job (nominal: 'teacher', 'health' care related, civil 'services' (e.g. administrative or police), - 'at_home' or 'other')

-   10 Fjob - father's job (nominal: 'teacher', 'health' care related, civil 'services' (e.g. administrative or police), - 'at_home' or 'other')

-   11 reason - reason to choose this school (nominal: close to 'home', school 'reputation', 'course' preference or 'other')

-   12 guardian - student's guardian (nominal: 'mother', 'father' or 'other')

-   13 traveltime - home to school travel time (numeric: 1 - \<15 min., 2 - 15 to 30 min., 3 - 30 min. to 1 hour, or 4 - \>1 hour)

-   14 studytime - weekly study time (numeric: 1 - \<2 hours, 2 - 2 to 5 hours, 3 - 5 to 10 hours, or 4 - \>10 hours)

-   15 failures - number of past class failures (numeric: n if 1\<=n\<3, else 4)

-   16 schoolsup - extra educational support (binary: yes or no)

-   17 famsup - family educational support (binary: yes or no)

-   18 paid - extra paid classes within the course subject (Math or Portuguese) (binary: yes or no)

-   19 activities - extra-curricular activities (binary: yes or no)

-   20 nursery - attended nursery school (binary: yes or no)

-   21 higher - wants to take higher education (binary: yes or no)

-   22 internet - Internet access at home (binary: yes or no)

-   23 romantic - with a romantic relationship (binary: yes or no)

-   24 famrel - quality of family relationships (numeric: from 1 - very bad to 5 - excellent)

-   25 freetime - free time after school (numeric: from 1 - very low to 5 - very high)

-   26 goout - going out with friends (numeric: from 1 - very low to 5 - very high)

-   27 Dalc - workday alcohol consumption (numeric: from 1 - very low to 5 - very high)

-   28 Walc - weekend alcohol consumption (numeric: from 1 - very low to 5 - very high)

-   29 health - current health status (numeric: from 1 - very bad to 5 - very good)

-   30 absences - number of school absences (numeric: from 0 to 93)

These grades are related with the course subject, Math or Portuguese:

-   31 G1 - first period grade (numeric: from 0 to 20)

-   31 G2 - second period grade (numeric: from 0 to 20)

-   32 G3 - final grade (numeric: from 0 to 20, output target)

### Libraries

```{r}
library(tidyverse)
library(psych)
```

## Read and Modify Data

### Read and Join

First, reading in using the provided R code:

```{r}
d1 <- read.table("student-mat.csv",sep=";",header=TRUE)
d2 <- read.table("student-por.csv",sep=";",header=TRUE)

d3 <- merge(d1,d2,by=c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet"))
print(nrow(d3)) # 382 students

```

Now, reading in using `tidyverse` methods.

```{r}
mat_data <- read_csv2(file = "student-mat.csv")
por_data <- read_csv2(file = "student-por.csv")
all_data <- inner_join(mat_data,por_data,by=c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet"))
```

There is a warning announced, referencing a many-to-many relationship between x and y. Trying again, joining on all variables except `G1`,`G2`,`G3`,`paid`,`absences`. Will use this result for all further exercises. Rather than listing all 28 desired vars for join, manually, I will first join on a selection of the two tables without the noted five fields. Then, I will join this result with the original mat and por data to get the additional fields, adjusting the names to include the course type as a suffix (G1 -> G1.mat, G1.por, etc.).

```{r}
#join the subset first
all_data <- inner_join(
  select(mat_data,-c(G1,G2,G3,paid,absences)),
  select(por_data,-c(G1,G2,G3,paid,absences))
  )

#add in the missing fields from mat and rename
all_data <- 
  left_join(
    all_data,
    mat_data
    ) |>
  rename_with(~ paste(.x,".mat",sep=""),
              .cols = c(G1,G2,G3,paid,absences)
  )

#similar activity for fields from por
all_data <- 
  left_join(
    all_data,
    por_data
    ) |>
  rename_with(~ paste(.x,".por",sep=""),
              .cols = c(G1,G2,G3,paid,absences)
  )

```

### Factoring Vars of Interest

I'd like to study the relationships of grades with these categorical variables:

1.  Pstatus: parent's cohabitation status (binary: 'T' - living together or 'A' - apart)
2.  freetime: free time after school (numeric: from 1 - very low to 5 - very high)
3.  famrel: quality of family relationships (numeric: from 1 - very bad to 5 - excellent)
4.  romantic: with a romantic relationship (binary: yes or no)

*Important note: For some of these fields, I am changing values from 1-5 to labels, but I do not have sufficient access to the original terminology used by survey participants for each value 1,2,3,4,5. I have the label for the 1 and the 5, only. I am adding a typical label for the middle responses,* **but these are a guess on my part and not suitable for strict interpretation as listed***.*

So, we will convert these to `factor` fields, for all three tibbles (math, portuguese, combined). To make this modular and clean, I will define a function to do this, then call it for each tibble.

```{r}
#writing a helper function for this purpose

#factorize_4_fields(myTibble)
#Takes a tibble as input, modifies the four fields noted above into factors, returns the modified tibble.
#Expects only a tibble of the por/mat_data dataset, no error checking.

factorize_4_fields <- function(myTibble) {
  myTibble <- 
    myTibble |>
    mutate(
      Pstatus = factor(Pstatus,
                       levels=c("A","T"),
                       labels=c("apart","together")
                       ),
      freetime = factor(freetime,
                        levels=c(1,2,3,4,5),
                        labels=c("1-very low", "2-low", "3-average", "4-high", "5-very high")
                        ),
      famrel = factor(famrel,
                      levels=c(1,2,3,4,5),
                      labels=c("1-very bad", "2-bad", "3-average", "4-good", "5-excellent")
                      ),
      romantic = factor(romantic,
                        levels=c("yes","no"),
                        labels=c("romance","no romance")
                        )
    )
  return(myTibble)
}

```

Now, running this factor mutation for each tibble:

```{r}

all_data <- 
  all_data |>
  factorize_4_fields()

mat_data <- 
  mat_data |>
  factorize_4_fields()

por_data <- 
  por_data |>
  factorize_4_fields()

```

## Summarize Data with Basic EDA

### Data Review

First, we will look at the data and evaluate whether it makes basic sense. We will also look for missing or malformed values, etc.

#### Structures, types, values

```{r}
str(all_data)
```

Looking at results of a structure `str()` function, the field names and their values look reasonable. They match the descriptions of the data dictionary. However, we need to adjust the numeric and categorical field types, as many of these fields have a numeric type currently but are truly categorical in nature. To be efficient, I will try to adjust *all* numeric fields *except* those I specify, to be coerced to character strings.

```{r}
all_data <- 
  all_data |>
  mutate(across(
           where(is.numeric)
           & !ends_with(".mat")
           & !ends_with(".por")
           & -failures,
           as.character #transform from numeric to char
           )
         )
```

#### Prior data transforms

I am concerned that there are only 320 records in the combined data, while both math and portuguese datasets had record volumes exceeding this amount (395, 649, respectively). Thinking through our join methodology, since we used an inner join, this gives us only the students who had data in both courses. That's not a bad approach and is even necessary for some analyses, so this is acceptable.

#### Numeric summary

I'll run psych::describe() to get a sense of the values and their centers, spread, to ensure that looks reasonable. Only the numeric ones.

```{r}
describe(select(all_data,is.numeric))
```

These all look reasonable for their representations of failed classes, number of absences, and grades.

#### Missing values

Let's check for any NA, though I see the original datasets used here were very clean.

```{r}
colSums(is.na(all_data))
```

All clean, no missing values in any field.

### EDA for Categorical Vars


