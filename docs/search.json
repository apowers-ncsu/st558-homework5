[
  {
    "objectID": "homework5.html",
    "href": "homework5.html",
    "title": "homework5",
    "section": "",
    "text": "Our dataset comes from the UCI ML repository and describes secondary education in two Portuguese schools.\nData dictionary\nDataset\nDictionary text:\n\n1 school - student’s school (binary: ‘GP’ - Gabriel Pereira or ‘MS’ - Mousinho da Silveira)\n2 sex - student’s sex (binary: ‘F’ - female or ‘M’ - male)\n3 age - student’s age (numeric: from 15 to 22)\n4 address - student’s home address type (binary: ‘U’ - urban or ‘R’ - rural)\n5 famsize - family size (binary: ‘LE3’ - less or equal to 3 or ‘GT3’ - greater than 3)\n6 Pstatus - parent’s cohabitation status (binary: ‘T’ - living together or ‘A’ - apart)\n7 Medu - mother’s education (numeric: 0 - none, 1 - primary education (4th grade), 2 â€“ 5th to 9th grade, 3 â€“ secondary - education or 4 â€“ higher education)\n8 Fedu - father’s education (numeric: 0 - none, 1 - primary education (4th grade), 2 â€“ 5th to 9th grade, 3 â€“ secondary - education or 4 â€“ higher education)\n9 Mjob - mother’s job (nominal: ‘teacher’, ‘health’ care related, civil ‘services’ (e.g. administrative or police), - ‘at_home’ or ‘other’)\n10 Fjob - father’s job (nominal: ‘teacher’, ‘health’ care related, civil ‘services’ (e.g. administrative or police), - ‘at_home’ or ‘other’)\n11 reason - reason to choose this school (nominal: close to ‘home’, school ‘reputation’, ‘course’ preference or ‘other’)\n12 guardian - student’s guardian (nominal: ‘mother’, ‘father’ or ‘other’)\n13 traveltime - home to school travel time (numeric: 1 - &lt;15 min., 2 - 15 to 30 min., 3 - 30 min. to 1 hour, or 4 - &gt;1 hour)\n14 studytime - weekly study time (numeric: 1 - &lt;2 hours, 2 - 2 to 5 hours, 3 - 5 to 10 hours, or 4 - &gt;10 hours)\n15 failures - number of past class failures (numeric: n if 1&lt;=n&lt;3, else 4)\n16 schoolsup - extra educational support (binary: yes or no)\n17 famsup - family educational support (binary: yes or no)\n18 paid - extra paid classes within the course subject (Math or Portuguese) (binary: yes or no)\n19 activities - extra-curricular activities (binary: yes or no)\n20 nursery - attended nursery school (binary: yes or no)\n21 higher - wants to take higher education (binary: yes or no)\n22 internet - Internet access at home (binary: yes or no)\n23 romantic - with a romantic relationship (binary: yes or no)\n24 famrel - quality of family relationships (numeric: from 1 - very bad to 5 - excellent)\n25 freetime - free time after school (numeric: from 1 - very low to 5 - very high)\n26 goout - going out with friends (numeric: from 1 - very low to 5 - very high)\n27 Dalc - workday alcohol consumption (numeric: from 1 - very low to 5 - very high)\n28 Walc - weekend alcohol consumption (numeric: from 1 - very low to 5 - very high)\n29 health - current health status (numeric: from 1 - very bad to 5 - very good)\n30 absences - number of school absences (numeric: from 0 to 93)\n\nThese grades are related with the course subject, Math or Portuguese:\n\n31 G1 - first period grade (numeric: from 0 to 20)\n31 G2 - second period grade (numeric: from 0 to 20)\n32 G3 - final grade (numeric: from 0 to 20, output target)\n\n\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(psych)\n\n\nAttaching package: 'psych'\n\nThe following objects are masked from 'package:ggplot2':\n\n    %+%, alpha\n\nlibrary(GGally)\n\nRegistered S3 method overwritten by 'GGally':\n  method from   \n  +.gg   ggplot2\n\n\n\n\n\n\n\n\nFirst, reading in using the provided R code:\n\nd1 &lt;- read.table(\"student-mat.csv\",sep=\";\",header=TRUE)\nd2 &lt;- read.table(\"student-por.csv\",sep=\";\",header=TRUE)\n\nd3 &lt;- merge(d1,d2,by=c(\"school\",\"sex\",\"age\",\"address\",\"famsize\",\"Pstatus\",\"Medu\",\"Fedu\",\"Mjob\",\"Fjob\",\"reason\",\"nursery\",\"internet\"))\nprint(nrow(d3)) # 382 students\n\n[1] 382\n\n\nNow, reading in using tidyverse methods.\n\nmat_data &lt;- read_csv2(file = \"student-mat.csv\")\n\nℹ Using \"','\" as decimal and \"'.'\" as grouping mark. Use `read_delim()` for more control.\n\n\nRows: 395 Columns: 33\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr (17): school, sex, address, famsize, Pstatus, Mjob, Fjob, reason, guardi...\ndbl (16): age, Medu, Fedu, traveltime, studytime, failures, famrel, freetime...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\npor_data &lt;- read_csv2(file = \"student-por.csv\")\n\nℹ Using \"','\" as decimal and \"'.'\" as grouping mark. Use `read_delim()` for more control.\nRows: 649 Columns: 33── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr (17): school, sex, address, famsize, Pstatus, Mjob, Fjob, reason, guardi...\ndbl (16): age, Medu, Fedu, traveltime, studytime, failures, famrel, freetime...\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nall_data &lt;- inner_join(mat_data,por_data,by=c(\"school\",\"sex\",\"age\",\"address\",\"famsize\",\"Pstatus\",\"Medu\",\"Fedu\",\"Mjob\",\"Fjob\",\"reason\",\"nursery\",\"internet\"))\n\nWarning in inner_join(mat_data, por_data, by = c(\"school\", \"sex\", \"age\", : Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 79 of `x` matches multiple rows in `y`.\nℹ Row 79 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\nThere is a warning announced, referencing a many-to-many relationship between x and y. Trying again, joining on all variables except G1,G2,G3,paid,absences. Will use this result for all further exercises. Rather than listing all 28 desired vars for join, manually, I will first join on a selection of the two tables without the noted five fields. Then, I will join this result with the original mat and por data to get the additional fields, adjusting the names to include the course type as a suffix (G1 -&gt; G1.mat, G1.por, etc.).\n\n#join the subset first\nall_data &lt;- inner_join(\n  select(mat_data,-c(G1,G2,G3,paid,absences)),\n  select(por_data,-c(G1,G2,G3,paid,absences))\n  )\n\nJoining with `by = join_by(school, sex, age, address, famsize, Pstatus, Medu,\nFedu, Mjob, Fjob, reason, guardian, traveltime, studytime, failures, schoolsup,\nfamsup, activities, nursery, higher, internet, romantic, famrel, freetime,\ngoout, Dalc, Walc, health)`\n\n#add in the missing fields from mat and rename\nall_data &lt;- \n  left_join(\n    all_data,\n    mat_data\n    ) |&gt;\n  rename_with(~ paste(.x,\".mat\",sep=\"\"),\n              .cols = c(G1,G2,G3,paid,absences)\n  )\n\nJoining with `by = join_by(school, sex, age, address, famsize, Pstatus, Medu,\nFedu, Mjob, Fjob, reason, guardian, traveltime, studytime, failures, schoolsup,\nfamsup, activities, nursery, higher, internet, romantic, famrel, freetime,\ngoout, Dalc, Walc, health)`\n\n#similar activity for fields from por\nall_data &lt;- \n  left_join(\n    all_data,\n    por_data\n    ) |&gt;\n  rename_with(~ paste(.x,\".por\",sep=\"\"),\n              .cols = c(G1,G2,G3,paid,absences)\n  )\n\nJoining with `by = join_by(school, sex, age, address, famsize, Pstatus, Medu,\nFedu, Mjob, Fjob, reason, guardian, traveltime, studytime, failures, schoolsup,\nfamsup, activities, nursery, higher, internet, romantic, famrel, freetime,\ngoout, Dalc, Walc, health)`\n\n\n\n\n\nI’d like to study the relationships of grades with these categorical variables:\n\nPstatus: parent’s cohabitation status (binary: ‘T’ - living together or ‘A’ - apart)\nfreetime: free time after school (numeric: from 1 - very low to 5 - very high)\nfamrel: quality of family relationships (numeric: from 1 - very bad to 5 - excellent)\nromantic: with a romantic relationship (binary: yes or no)\n\nImportant note: For some of these fields, I am changing values from 1-5 to labels, but I do not have sufficient access to the original terminology used by survey participants for each value 1,2,3,4,5. I have the label for the 1 and the 5, only. I am adding a typical label for the middle responses, but these are a guess on my part and not suitable for strict interpretation as listed.\nSo, we will convert these to factor fields, for all three tibbles (math, portuguese, combined). To make this modular and clean, I will define a function to do this, then call it for each tibble.\n\n#writing a helper function for this purpose\n\n#factorize_4_fields(myTibble)\n#Takes a tibble as input, modifies the four fields noted above into factors, returns the modified tibble.\n#Expects only a tibble of the por/mat_data dataset, no error checking.\n\nfactorize_4_fields &lt;- function(myTibble) {\n  myTibble &lt;- \n    myTibble |&gt;\n    mutate(\n      Pstatus = factor(Pstatus,\n                       levels=c(\"A\",\"T\"),\n                       labels=c(\"apart\",\"together\")\n                       ),\n      freetime = factor(freetime,\n                        levels=c(1,2,3,4,5),\n                        labels=c(\"1-very low\", \"2-low\", \"3-average\", \"4-high\", \"5-very high\")\n                        ),\n      famrel = factor(famrel,\n                      levels=c(1,2,3,4,5),\n                      labels=c(\"1-very bad\", \"2-bad\", \"3-average\", \"4-good\", \"5-excellent\")\n                      ),\n      romantic = factor(romantic,\n                        levels=c(\"yes\",\"no\"),\n                        labels=c(\"romance\",\"no romance\")\n                        )\n    )\n  return(myTibble)\n}\n\nNow, running this factor mutation for each tibble:\n\nall_data &lt;- \n  all_data |&gt;\n  factorize_4_fields()\n\nmat_data &lt;- \n  mat_data |&gt;\n  factorize_4_fields()\n\npor_data &lt;- \n  por_data |&gt;\n  factorize_4_fields()\n\n\n\n\n\n\n\nFirst, we will look at the data and evaluate whether it makes basic sense. We will also look for missing or malformed values, etc.\n\n\n\nstr(all_data)\n\ntibble [320 × 38] (S3: tbl_df/tbl/data.frame)\n $ school      : chr [1:320] \"GP\" \"GP\" \"GP\" \"GP\" ...\n $ sex         : chr [1:320] \"F\" \"F\" \"F\" \"F\" ...\n $ age         : num [1:320] 18 17 15 16 16 16 17 15 15 15 ...\n $ address     : chr [1:320] \"U\" \"U\" \"U\" \"U\" ...\n $ famsize     : chr [1:320] \"GT3\" \"GT3\" \"GT3\" \"GT3\" ...\n $ Pstatus     : Factor w/ 2 levels \"apart\",\"together\": 1 2 2 2 2 2 1 1 2 2 ...\n $ Medu        : num [1:320] 4 1 4 3 4 2 4 3 3 4 ...\n $ Fedu        : num [1:320] 4 1 2 3 3 2 4 2 4 4 ...\n $ Mjob        : chr [1:320] \"at_home\" \"at_home\" \"health\" \"other\" ...\n $ Fjob        : chr [1:320] \"teacher\" \"other\" \"services\" \"other\" ...\n $ reason      : chr [1:320] \"course\" \"course\" \"home\" \"home\" ...\n $ guardian    : chr [1:320] \"mother\" \"father\" \"mother\" \"father\" ...\n $ traveltime  : num [1:320] 2 1 1 1 1 1 2 1 1 1 ...\n $ studytime   : num [1:320] 2 2 3 2 2 2 2 2 2 2 ...\n $ failures    : num [1:320] 0 0 0 0 0 0 0 0 0 0 ...\n $ schoolsup   : chr [1:320] \"yes\" \"no\" \"no\" \"no\" ...\n $ famsup      : chr [1:320] \"no\" \"yes\" \"yes\" \"yes\" ...\n $ activities  : chr [1:320] \"no\" \"no\" \"yes\" \"no\" ...\n $ nursery     : chr [1:320] \"yes\" \"no\" \"yes\" \"yes\" ...\n $ higher      : chr [1:320] \"yes\" \"yes\" \"yes\" \"yes\" ...\n $ internet    : chr [1:320] \"no\" \"yes\" \"yes\" \"no\" ...\n $ romantic    : Factor w/ 2 levels \"romance\",\"no romance\": 2 2 1 2 2 2 2 2 2 2 ...\n $ famrel      : Factor w/ 5 levels \"1-very bad\",\"2-bad\",..: 4 5 3 4 5 4 4 4 5 3 ...\n $ freetime    : Factor w/ 5 levels \"1-very low\",\"2-low\",..: 3 3 2 3 4 4 1 2 5 3 ...\n $ goout       : num [1:320] 4 3 2 2 2 4 4 2 1 3 ...\n $ Dalc        : num [1:320] 1 1 1 1 1 1 1 1 1 1 ...\n $ Walc        : num [1:320] 1 1 1 2 2 1 1 1 1 2 ...\n $ health      : num [1:320] 3 3 5 5 5 3 1 1 5 2 ...\n $ paid.mat    : chr [1:320] \"no\" \"no\" \"yes\" \"yes\" ...\n $ absences.mat: num [1:320] 6 4 2 4 10 0 6 0 0 0 ...\n $ G1.mat      : num [1:320] 5 5 15 6 15 12 6 16 14 10 ...\n $ G2.mat      : num [1:320] 6 5 14 10 15 12 5 18 15 8 ...\n $ G3.mat      : num [1:320] 6 6 15 10 15 11 6 19 15 9 ...\n $ paid.por    : chr [1:320] \"no\" \"no\" \"no\" \"no\" ...\n $ absences.por: num [1:320] 4 2 0 0 6 0 2 0 0 2 ...\n $ G1.por      : num [1:320] 0 9 14 11 12 13 10 15 12 14 ...\n $ G2.por      : num [1:320] 11 11 14 13 12 12 13 16 12 14 ...\n $ G3.por      : num [1:320] 11 11 14 13 13 13 13 17 13 14 ...\n\n\nLooking at results of a structure str() function, the field names and their values look reasonable. They match the descriptions of the data dictionary. However, we need to adjust the numeric and categorical field types, as many of these fields have a numeric type currently but are truly categorical in nature. To be efficient, I will try to adjust all numeric fields except those I specify, to be coerced to character strings.\n\nall_data &lt;- \n  all_data |&gt;\n  mutate(across(\n           where(is.numeric)\n           & !ends_with(\".mat\")\n           & !ends_with(\".por\")\n           & -c(failures,age),\n           as.character #transform from numeric to char\n           )\n         )\n\n\n\n\nI am concerned that there are only 320 records in the combined data, while both math and portuguese datasets had record volumes exceeding this amount (395, 649, respectively). Thinking through our join methodology, since we used an inner join, this gives us only the students who had data in both courses. That’s not a bad approach and is even necessary for some analyses, so this is acceptable.\n\n\n\nI’ll run psych::describe() to get a sense of the values and their centers, spread, to ensure that looks reasonable. Only the numeric ones.\n\ndescribe(select(all_data,is.numeric))\n\nWarning: Use of bare predicate functions was deprecated in tidyselect 1.1.0.\nℹ Please use wrap predicates in `where()` instead.\n  # Was:\n  data %&gt;% select(is.numeric)\n\n  # Now:\n  data %&gt;% select(where(is.numeric))\n\n\n             vars   n  mean   sd median trimmed  mad min max range  skew\nage             1 320 16.52 1.14     16   16.49 1.48  15  22     7  0.43\nfailures        2 320  0.08 0.39      0    0.00 0.00   0   3     3  5.92\nabsences.mat    3 320  5.41 7.84      4    4.00 5.93   0  75    75  4.25\nG1.mat          4 320 11.29 3.20     11   11.19 2.97   5  19    14  0.27\nG2.mat          5 320 11.18 3.67     11   11.29 2.97   0  19    19 -0.45\nG3.mat          6 320 11.04 4.30     11   11.38 4.45   0  20    20 -0.76\nabsences.por    7 320  3.25 4.56      2    2.33 2.97   0  32    32  2.53\nG1.por          8 320 12.39 2.56     12   12.41 2.97   0  19    19 -0.31\nG2.por          9 320 12.57 2.42     12   12.52 2.97   5  19    14  0.20\nG3.por         10 320 12.88 2.89     13   12.97 2.97   0  19    19 -1.13\n             kurtosis   se\nage              0.35 0.06\nfailures        38.64 0.02\nabsences.mat    27.83 0.44\nG1.mat          -0.70 0.18\nG2.mat           0.62 0.21\nG3.mat           0.75 0.24\nabsences.por     9.37 0.25\nG1.por           1.08 0.14\nG2.por          -0.19 0.14\nG3.por           4.18 0.16\n\n\nThese all look reasonable for their representations of failed classes, number of absences, and grades.\n\n\n\nLet’s check for any NA, though I see the original datasets used here were very clean.\n\ncolSums(is.na(all_data))\n\n      school          sex          age      address      famsize      Pstatus \n           0            0            0            0            0            0 \n        Medu         Fedu         Mjob         Fjob       reason     guardian \n           0            0            0            0            0            0 \n  traveltime    studytime     failures    schoolsup       famsup   activities \n           0            0            0            0            0            0 \n     nursery       higher     internet     romantic       famrel     freetime \n           0            0            0            0            0            0 \n       goout         Dalc         Walc       health     paid.mat absences.mat \n           0            0            0            0            0            0 \n      G1.mat       G2.mat       G3.mat     paid.por absences.por       G1.por \n           0            0            0            0            0            0 \n      G2.por       G3.por \n           0            0 \n\n\nAll clean, no missing values in any field.\n\n\n\n\n\n\nThese are easy to create using table() so there isn’t much preamble needed. Interpretation afterward. These are built with BaseR.\n\ntable(all_data['Pstatus'])\n\nPstatus\n   apart together \n      31      289 \n\n\nThis one-way contingency table simply tells us that most of the studied students’ parents lived together (289) while a smaller count did not (31). The numbers are basic counts of each element of the field Pstatus.\n\ntable(all_data[c('Pstatus','romantic')])\n\n          romantic\nPstatus    romance no romance\n  apart         13         18\n  together      86        203\n\n\nThis two-way table shows the split of the prior table by the romance / no romance values. Of the 31 students whose parents lived separately, 13 students were in a romantic relationship. That’s interesting, as a percentage of the total, because the share of romance / no romance is much closer for the apart group than the share for the together group.\n\ntable(all_data[c('Pstatus','romantic','famrel')])\n\n, , famrel = 1-very bad\n\n          romantic\nPstatus    romance no romance\n  apart          2          0\n  together       3          1\n\n, , famrel = 2-bad\n\n          romantic\nPstatus    romance no romance\n  apart          1          1\n  together       3          8\n\n, , famrel = 3-average\n\n          romantic\nPstatus    romance no romance\n  apart          2          3\n  together      12         35\n\n, , famrel = 4-good\n\n          romantic\nPstatus    romance no romance\n  apart          4          9\n  together      48         96\n\n, , famrel = 5-excellent\n\n          romantic\nPstatus    romance no romance\n  apart          4          5\n  together      20         63\n\n\nThe three-way contingency table with a 5-element field is much harder to interpret. Looking at the 1-very bad relationship group, 2 students have separated parents and are in a romantic relationship. While the volumes for the 1-very bad group are low, it is the only level of family relationship where the total romance-active students exceeds that of no-romance students.\n\n\n\nFirst, creating this via table() and a filter.\n\ntable_cond_2way_a &lt;- filter(all_data,famrel==\"1-very bad\")\ntable(table_cond_2way_a[c('Pstatus','romantic')])\n\n          romantic\nPstatus    romance no romance\n  apart          2          0\n  together       3          1\n\n\nThis looks like our sample above, reflecting only the counts of the filtered student data.\nCreating this another way, I’ll make the 3-way table and then subset it:\n\ntable_cond_2way &lt;- table(all_data[c('Pstatus','romantic','famrel')])\ntable_cond_2way[,,1]\n\n          romantic\nPstatus    romance no romance\n  apart          2          0\n  together       3          1\n\n\nLooks good.\n\n\n\nI will make these using group_by() and summarize() to test other methods.\n\ntable_dplyr &lt;- \n  all_data |&gt;\n  group_by(Pstatus,romantic) |&gt;\n  summarize(count = n())\n\n`summarise()` has grouped output by 'Pstatus'. You can override using the\n`.groups` argument.\n\ntable_dplyr\n\n# A tibble: 4 × 3\n# Groups:   Pstatus [2]\n  Pstatus  romantic   count\n  &lt;fct&gt;    &lt;fct&gt;      &lt;int&gt;\n1 apart    romance       13\n2 apart    no romance    18\n3 together romance       86\n4 together no romance   203\n\n\nThe values match but the display format does not. pivot_wider will adjust this to mimic the prior result from BaseR, the typical display for a contingency table.\n\ntable_dplyr &lt;- pivot_wider(table_dplyr,names_from = \"romantic\",values_from = \"count\")\ntable_dplyr\n\n# A tibble: 2 × 3\n# Groups:   Pstatus [2]\n  Pstatus  romance `no romance`\n  &lt;fct&gt;      &lt;int&gt;        &lt;int&gt;\n1 apart         13           18\n2 together      86          203\n\n\nMatches the original display of table().\n\n\n\nNow, using ggplot2 I will display a stacked bar graph and side-by-side variant of the same. Good labels for the axes and a title, too.\n\ng &lt;- ggplot(all_data,\n            aes(x=Pstatus,\n                fill=romantic\n                )\n            )\ng + \n  geom_bar(position=\"stack\") +\n  labs(\n    x=\"Cohabitation Status of Parents\",\n    y=\"Count of Students\",\n    fill=\"Student Romance\",\n    title = \"Cohabitation State of Parents & Student Romance Status\")\n\n\n\n\n\n\n\n\n\ng + \n  geom_bar(position=\"dodge\") +\n  labs(\n    x=\"Cohabitation Status of Parents\",\n    y=\"Count of Students\",\n    fill=\"Student Romance\",\n    title = \"Cohabitation State of Parents & Student Romance Status\") \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFirst, calculating basic measures of center and spread for three vars:\n\nall_data |&gt;\n  select(age,G3.mat,G3.por) |&gt;\n  summarize(across(everything(),\n                   list(\"mean\"=mean,\n                        \"median\"=median,\n                        \"sd\"=sd,\n                        \"IQR\"=IQR),\n                   .names=\"{.col}-{.fn}\"\n                   )\n            )\n\n# A tibble: 1 × 12\n  `age-mean` `age-median` `age-sd` `age-IQR` `G3.mat-mean` `G3.mat-median`\n       &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;         &lt;dbl&gt;           &lt;dbl&gt;\n1       16.5           16     1.14         1          11.0              11\n# ℹ 6 more variables: `G3.mat-sd` &lt;dbl&gt;, `G3.mat-IQR` &lt;dbl&gt;,\n#   `G3.por-mean` &lt;dbl&gt;, `G3.por-median` &lt;dbl&gt;, `G3.por-sd` &lt;dbl&gt;,\n#   `G3.por-IQR` &lt;dbl&gt;\n\n\nLooking at age, we know most students are about 16, +/- 1. Now, let’s see the summary results for these students when we only assess those with a romantic relationship.\n\nall_data |&gt;\n  filter(romantic==\"romance\") |&gt;\n  select(age,G3.mat,G3.por) |&gt;\n  summarize(across(everything(),\n                   list(\"mean\"=mean,\n                        \"median\"=median,\n                        \"sd\"=sd,\n                        \"IQR\"=IQR),\n                   .names=\"{.col}-{.fn}\"\n                   )\n            )\n\n# A tibble: 1 × 12\n  `age-mean` `age-median` `age-sd` `age-IQR` `G3.mat-mean` `G3.mat-median`\n       &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;         &lt;dbl&gt;           &lt;dbl&gt;\n1       16.8           17     1.15         2          10.4              11\n# ℹ 6 more variables: `G3.mat-sd` &lt;dbl&gt;, `G3.mat-IQR` &lt;dbl&gt;,\n#   `G3.por-mean` &lt;dbl&gt;, `G3.por-median` &lt;dbl&gt;, `G3.por-sd` &lt;dbl&gt;,\n#   `G3.por-IQR` &lt;dbl&gt;\n\n\nThis result shows higher typical ages for students in a romantic relationship, along with noticeably lower final math grades but comparable language grades.\n\n\n\nNow, let’s compare these results for both of the romance states of students.\n\nall_data |&gt;\n  group_by(romantic) |&gt;\n  select(age,G3.mat,absences.mat) |&gt;\n  summarize(across(everything(),\n                   list(\"mean\"=mean,\n                        \"median\"=median,\n                        \"sd\"=sd,\n                        \"IQR\"=IQR),\n                   .names=\"{.col}-{.fn}\"\n                   )\n            )\n\nAdding missing grouping variables: `romantic`\n\n\n# A tibble: 2 × 13\n  romantic   `age-mean` `age-median` `age-sd` `age-IQR` `G3.mat-mean`\n  &lt;fct&gt;           &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;         &lt;dbl&gt;\n1 romance          16.8           17     1.15         2          10.4\n2 no romance       16.4           16     1.11         2          11.3\n# ℹ 7 more variables: `G3.mat-median` &lt;dbl&gt;, `G3.mat-sd` &lt;dbl&gt;,\n#   `G3.mat-IQR` &lt;dbl&gt;, `absences.mat-mean` &lt;dbl&gt;, `absences.mat-median` &lt;dbl&gt;,\n#   `absences.mat-sd` &lt;dbl&gt;, `absences.mat-IQR` &lt;dbl&gt;\n\n\nThere are higher numbers of absences associated with those students in romantic relationships, though with a much larger spread (and a smaller sample size).\n\n\n\nNow, let’s group additionally by famrel.\n\nall_data |&gt;\n  group_by(romantic,famrel) |&gt;\n  select(age,G3.mat,G3.por) |&gt;\n  summarize(across(everything(),\n                   list(\"mean\"=mean,\n                        \"median\"=median,\n                        \"sd\"=sd,\n                        \"IQR\"=IQR),\n                   .names=\"{.col}-{.fn}\"\n                   )\n            )\n\nAdding missing grouping variables: `romantic`, `famrel`\n`summarise()` has grouped output by 'romantic'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 10 × 14\n# Groups:   romantic [2]\n   romantic   famrel    `age-mean` `age-median` `age-sd` `age-IQR` `G3.mat-mean`\n   &lt;fct&gt;      &lt;fct&gt;          &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;         &lt;dbl&gt;\n 1 romance    1-very b…       16.2           16    1.30       2            13   \n 2 romance    2-bad           17             17    0.816      0.5          12.5 \n 3 romance    3-average       16.8           17    0.975      0.75         10.6 \n 4 romance    4-good          16.9           17    1.00       2            10.2 \n 5 romance    5-excell…       16.8           17    1.56       2             9.79\n 6 no romance 1-very b…       16             16   NA          0            12   \n 7 no romance 2-bad           16.3           16    1.22       1             9.56\n 8 no romance 3-average       16.2           16    0.896      1            11.4 \n 9 no romance 4-good          16.4           16    1.16       2            11.3 \n10 no romance 5-excell…       16.4           16    1.15       2            11.6 \n# ℹ 7 more variables: `G3.mat-median` &lt;dbl&gt;, `G3.mat-sd` &lt;dbl&gt;,\n#   `G3.mat-IQR` &lt;dbl&gt;, `G3.por-mean` &lt;dbl&gt;, `G3.por-median` &lt;dbl&gt;,\n#   `G3.por-sd` &lt;dbl&gt;, `G3.por-IQR` &lt;dbl&gt;\n\n\nWell, with one of my variables having 5 levels, this output is hard to read. Further, I wish strongly that I could add in the count of students in each grouping but I can’t figure out how. With the levels of famrel ordered as factors, we can see a lightly-apparent trend that age is positively correlated to quality of family relationships.\n\n\n\nThis may be hard to read, but now we will make a correlation matrix for all numeric variables. I don’t recall this being in the lesson, but I reviewed how to use cor() to do this.\n\ncor(all_data[sapply(all_data,is.numeric)]) \n\n                      age   failures absences.mat      G1.mat      G2.mat\nage           1.000000000  0.2434296   0.14392517 -0.11037935 -0.18618740\nfailures      0.243429617  1.0000000   0.12006863 -0.19581035 -0.16669179\nabsences.mat  0.143925170  0.1200686   1.00000000 -0.06946116 -0.07580245\nG1.mat       -0.110379348 -0.1958103  -0.06946116  1.00000000  0.86588796\nG2.mat       -0.186187399 -0.1666918  -0.07580245  0.86588796  1.00000000\nG3.mat       -0.206031862 -0.1430320  -0.02811847  0.81859418  0.91357599\nabsences.por  0.047331821  0.1342426   0.56381559 -0.08760610 -0.12636236\nG1.por       -0.050549678 -0.2692766  -0.09247761  0.59293522  0.54300736\nG2.por        0.029366456 -0.2699260  -0.14516402  0.59517224  0.56521350\nG3.por       -0.009103257 -0.3277569  -0.13572638  0.54388734  0.49603265\n                  G3.mat absences.por      G1.por      G2.por       G3.por\nage          -0.20603186   0.04733182 -0.05054968  0.02936646 -0.009103257\nfailures     -0.14303203   0.13424264 -0.26927657 -0.26992597 -0.327756897\nabsences.mat -0.02811847   0.56381559 -0.09247761 -0.14516402 -0.135726385\nG1.mat        0.81859418  -0.08760610  0.59293522  0.59517224  0.543887345\nG2.mat        0.91357599  -0.12636236  0.54300736  0.56521350  0.496032649\nG3.mat        1.00000000  -0.11664046  0.52288461  0.54545279  0.475956497\nabsences.por -0.11664046   1.00000000 -0.09864117 -0.12070727 -0.071452010\nG1.por        0.52288461  -0.09864117  1.00000000  0.88415041  0.825414320\nG2.por        0.54545279  -0.12070727  0.88415041  1.00000000  0.894309821\nG3.por        0.47595650  -0.07145201  0.82541432  0.89430982  1.000000000\n\n\n\n\n\nI will create these for the numeric variables absences.mat and G3.mat, for categorical variable freetime.\nFirst, the charts for absences.mat, beginning with the kernel density function. I’ll display all three types and then interpret briefly.\n\ng_G3.mat &lt;- ggplot(all_data,\n                         aes(x=absences.mat)\n                         )\n\ng_G3.mat + \n  geom_density(\n    kernel=\"gaussian\",\n    alpha=0.5,\n    aes(\n      fill=freetime\n      )\n    ) +\n  labs(\n    title=\"Density of Students by Math Absences and Freetime\",\n    x=\"Math Absences\",\n    y=\"Population Density\",\n    fill=\"Freetime\"\n  )\n\n\n\n\n\n\n\n\nNext, histogram:\n\ng_G3.mat +\n  geom_histogram(\n    aes(\n      fill=freetime\n    ),\n    binwidth=2,\n    position=\"identity\",\n    alpha=0.65\n  ) +\n    labs(\n    title=\"Histogram of Students by Math Absences and Freetime\",\n    x=\"Math Absences\",\n    y=\"Count of Students\",\n    fill=\"Freetime\"\n  )\n\n\n\n\n\n\n\n\nAnd the boxplot:\n\ng_G3.mat +\n  geom_boxplot(\n    aes(\n      x = absences.mat,\n      fill=freetime)\n  ) +\n    labs(\n    title=\"Boxplot of Math Absences by Freetime\",\n    x=\"Math Absences\",\n    fill=\"Freetime\"\n  ) +\n  theme(axis.text.y = element_blank())\n\n\n\n\n\n\n\n\nLooking at the three charts for this data, I find the histogram (as displayed) to be hard to read and interpret. The boxplot is great and shows, unexpectedly, the greater IQR for Math absences by students with lots of free time. The density chart shows this, too. It’s hard to take any further interpretation from this as the differences are small and the charts could use tweaking for better clarity.\nNow, the charts for G3.mat. Again, I’ll display all three types and then interpret briefly.\n\ng_G3.mat &lt;- ggplot(all_data,\n                         aes(x=G3.mat)\n                         )\n\ng_G3.mat + \n  geom_density(\n    kernel=\"gaussian\",\n    alpha=0.5,\n    aes(\n      fill=freetime\n      )\n    ) +\n  labs(\n    title=\"Density of Students by Math Final and Freetime\",\n    x=\"Math Final\",\n    y=\"Population Density\",\n    fill=\"Freetime\"\n  )\n\n\n\n\n\n\n\n\nNext, histogram:\n\ng_G3.mat +\n  geom_histogram(\n    aes(\n      fill=freetime\n    ),\n    binwidth=2,\n    position=\"identity\",\n    alpha=0.65\n  ) +\n    labs(\n    title=\"Histogram of Students by Math Final and Freetime\",\n    x=\"Math Final\",\n    y=\"Count of Students\",\n    fill=\"Freetime\"\n  )\n\n\n\n\n\n\n\n\nAnd the boxplot:\n\ng_G3.mat +\n  geom_boxplot(\n    aes(\n      x = G3.mat,\n      fill=freetime)\n  ) +\n    labs(\n    title=\"Boxplot of Math Final by Freetime\",\n    x=\"Math Final\",\n    fill=\"Freetime\"\n  ) +\n  theme(axis.text.y = element_blank())\n\n\n\n\n\n\n\n\nThese results present a similar experience for interpretation. The histogram is harder to read, while the box and density plots show a clear positive trend between the more free time and the final math grade of the students.\n\n\n\nNext, two scatterplots, one to compare G2 and G3 for math, the other to compare G3.mat with absences in language. I expect the first one to be strongly positively correlated and the second to be fairly strongly negatively correlated. I’ll color the points according to categorical variables Pstatus and freetime.\n\ng_G3.mat +\n  geom_point(\n    aes(\n      x=G2.mat,\n      y=G3.mat,\n      color=Pstatus),\n    position = \"jitter\"\n  ) +\n    labs(\n    title=\"Scatter of Math Final by Math First Grade by Parental Cohabitation\",\n    x=\"Math First Grade\",\n    y=\"Math Final Grade\",\n    color=\"Parents Cohabitation Status\"\n  )\n\n\n\n\n\n\n\n\nAbove, the strong correlation is clear; it is likely that the first math grade of the session grows as does the final math grade. Also, the cohabitation status coloring shows no clear difference between the states of apart / together.\n\ng_G3.mat +\n  geom_point(\n    aes(\n      x=absences.por,\n      y=G3.mat,\n      shape=freetime,color=freetime\n      ),\n    position = \"jitter\"\n  ) +\n    labs(\n      title=\"Scatter of Math Final by Language Absences by Student Freetime\",\n      x=\"Absences in Language\",\n      y=\"Math Final Grade\",\n      color=\"Student Freetime\",\n      shape=\"Student Freetime\"\n  )\n\n\n\n\n\n\n\n\nThis is very hard to read! Generally, it looks like the two numeric variables are negatively correlated, slightly. As for the relation of freetime with these, it’s too hard to see here. Even increasing the jitter would not make it much cleaner. There might be ways to group the data points to make fewer appear.\n\n\n\nLast, let’s repeat these with faceting graphs, first at each setting of another cat variable, and then at each combination of two cat variables.\n\ng_G3.mat +\n  geom_point(\n    aes(\n      x=G2.mat,\n      y=G3.mat,\n      color=Pstatus),\n    position = \"jitter\"\n  ) +\n    labs(\n    title=\"Scatter of Math Final by Math First Grade by Parental Cohabitation\",\n    subtitle=\"Faceted by Family Relationship Strength\",\n    x=\"Math First Grade\",\n    y=\"Math Final Grade\",\n    color=\"Parents Cohabitation Status\"\n  ) +\n  facet_wrap(~ famrel)\n\n\n\n\n\n\n\n\nThat is so much better! The faceted charts here clearly suggest minimal impact of the Family Relationship Strength on the other variables. I love that ggplot2 ensures consistency of axes across facets, natively.\n\ng_G3.mat +\n  geom_point(\n    aes(\n      x=absences.por,\n      y=G3.mat,\n      shape=freetime,color=freetime\n      ),\n    position = \"jitter\"\n  ) +\n    labs(\n      title=\"Scatter of Math Final by Language Absences by Student Freetime\",\n      x=\"Absences in Language\",\n      y=\"Math Final Grade\",\n      color=\"Student Freetime\",\n      shape=\"Student Freetime\"\n  ) +\n  facet_wrap(~ romantic)\n\n\n\n\n\n\n\n\nThis is hard to read, again, so I’m going to switch faceting to the freetime dimension:\n\ng_G3.mat +\n  geom_point(\n    aes(\n      x=absences.por,\n      y=G3.mat,\n      shape=romantic,color=romantic\n      ),\n    position = \"jitter\"\n  ) +\n    labs(\n      title=\"Scatter of Math Final by Language Absences by Romantic Status\",\n      subtitle=\"Faceted by Freetime Levels\",\n      x=\"Absences in Language\",\n      y=\"Math Final Grade\",\n      color=\"Romantic Status\",\n      shape=\"Romantic Status\"\n  ) +\n  facet_wrap(~ freetime)\n\n\n\n\n\n\n\n\nBetter, again, as a display. Hard still to interpret, even so. At a glance, I can’t tell any strong relationship here between freetime and either numeric variable. It would require more study to understand the strength of any correlation between freetime and romance.\nLastly, we’ll combine these at combinations of two categorical variables.\n\ng_G3.mat +\n  geom_point(\n    aes(\n      x=G2.mat,\n      y=G3.mat,\n      color=Pstatus),\n    position = \"jitter\"\n  ) +\n    labs(\n    title=\"Scatter of Math Final by Math First Grade by Parental Cohabitation\",\n    subtitle=\"Faceted by Family Relationship Strength & Romantic Status\",\n    x=\"Math First Grade\",\n    y=\"Math Final Grade\",\n    color=\"Parents Cohabitation Status\"\n  ) +\n  facet_grid(~ famrel ~ romantic)\n\n\n\n\n\n\n\n\nToo much info! Or just no clear relationships to interpret. Actually, no, I do see that no romance tends to offer some of the highest scores in the range, both in first and also final math grades. But that would have been easier to identify without the noise of the additional variables here!\n\ng_G3.mat +\n  geom_point(\n    aes(\n      x=absences.por,\n      y=G3.mat,\n      shape=romantic,color=romantic\n      ),\n    position = \"jitter\"\n  ) +\n    labs(\n      title=\"Scatter of Math Final by Language Absences by Romantic Status\",\n      subtitle=\"Faceted by Freetime Levels and Parental Cohabitation Status\",\n      x=\"Absences in Language\",\n      y=\"Math Final Grade\",\n      color=\"Romantic Status\",\n      shape=\"Romantic Status\"\n  ) +\n  facet_grid(~ freetime ~ Pstatus)\n\n\n\n\n\n\n\n\nEasy, as before, to see little relationship between the two numeric variables. Looking at parental cohabitation, there is no clear takeaway for me. I don’t see anything telling for any comparison of the variables shown here, but I also must acknowledge the small sample size in the apart group which precludes strong interpretations there, regardless."
  },
  {
    "objectID": "homework5.html#context",
    "href": "homework5.html#context",
    "title": "homework5",
    "section": "",
    "text": "Our dataset comes from the UCI ML repository and describes secondary education in two Portuguese schools.\nData dictionary\nDataset\nDictionary text:\n\n1 school - student’s school (binary: ‘GP’ - Gabriel Pereira or ‘MS’ - Mousinho da Silveira)\n2 sex - student’s sex (binary: ‘F’ - female or ‘M’ - male)\n3 age - student’s age (numeric: from 15 to 22)\n4 address - student’s home address type (binary: ‘U’ - urban or ‘R’ - rural)\n5 famsize - family size (binary: ‘LE3’ - less or equal to 3 or ‘GT3’ - greater than 3)\n6 Pstatus - parent’s cohabitation status (binary: ‘T’ - living together or ‘A’ - apart)\n7 Medu - mother’s education (numeric: 0 - none, 1 - primary education (4th grade), 2 â€“ 5th to 9th grade, 3 â€“ secondary - education or 4 â€“ higher education)\n8 Fedu - father’s education (numeric: 0 - none, 1 - primary education (4th grade), 2 â€“ 5th to 9th grade, 3 â€“ secondary - education or 4 â€“ higher education)\n9 Mjob - mother’s job (nominal: ‘teacher’, ‘health’ care related, civil ‘services’ (e.g. administrative or police), - ‘at_home’ or ‘other’)\n10 Fjob - father’s job (nominal: ‘teacher’, ‘health’ care related, civil ‘services’ (e.g. administrative or police), - ‘at_home’ or ‘other’)\n11 reason - reason to choose this school (nominal: close to ‘home’, school ‘reputation’, ‘course’ preference or ‘other’)\n12 guardian - student’s guardian (nominal: ‘mother’, ‘father’ or ‘other’)\n13 traveltime - home to school travel time (numeric: 1 - &lt;15 min., 2 - 15 to 30 min., 3 - 30 min. to 1 hour, or 4 - &gt;1 hour)\n14 studytime - weekly study time (numeric: 1 - &lt;2 hours, 2 - 2 to 5 hours, 3 - 5 to 10 hours, or 4 - &gt;10 hours)\n15 failures - number of past class failures (numeric: n if 1&lt;=n&lt;3, else 4)\n16 schoolsup - extra educational support (binary: yes or no)\n17 famsup - family educational support (binary: yes or no)\n18 paid - extra paid classes within the course subject (Math or Portuguese) (binary: yes or no)\n19 activities - extra-curricular activities (binary: yes or no)\n20 nursery - attended nursery school (binary: yes or no)\n21 higher - wants to take higher education (binary: yes or no)\n22 internet - Internet access at home (binary: yes or no)\n23 romantic - with a romantic relationship (binary: yes or no)\n24 famrel - quality of family relationships (numeric: from 1 - very bad to 5 - excellent)\n25 freetime - free time after school (numeric: from 1 - very low to 5 - very high)\n26 goout - going out with friends (numeric: from 1 - very low to 5 - very high)\n27 Dalc - workday alcohol consumption (numeric: from 1 - very low to 5 - very high)\n28 Walc - weekend alcohol consumption (numeric: from 1 - very low to 5 - very high)\n29 health - current health status (numeric: from 1 - very bad to 5 - very good)\n30 absences - number of school absences (numeric: from 0 to 93)\n\nThese grades are related with the course subject, Math or Portuguese:\n\n31 G1 - first period grade (numeric: from 0 to 20)\n31 G2 - second period grade (numeric: from 0 to 20)\n32 G3 - final grade (numeric: from 0 to 20, output target)\n\n\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(psych)\n\n\nAttaching package: 'psych'\n\nThe following objects are masked from 'package:ggplot2':\n\n    %+%, alpha\n\nlibrary(GGally)\n\nRegistered S3 method overwritten by 'GGally':\n  method from   \n  +.gg   ggplot2"
  },
  {
    "objectID": "homework5.html#read-and-modify-data",
    "href": "homework5.html#read-and-modify-data",
    "title": "homework5",
    "section": "",
    "text": "First, reading in using the provided R code:\n\nd1 &lt;- read.table(\"student-mat.csv\",sep=\";\",header=TRUE)\nd2 &lt;- read.table(\"student-por.csv\",sep=\";\",header=TRUE)\n\nd3 &lt;- merge(d1,d2,by=c(\"school\",\"sex\",\"age\",\"address\",\"famsize\",\"Pstatus\",\"Medu\",\"Fedu\",\"Mjob\",\"Fjob\",\"reason\",\"nursery\",\"internet\"))\nprint(nrow(d3)) # 382 students\n\n[1] 382\n\n\nNow, reading in using tidyverse methods.\n\nmat_data &lt;- read_csv2(file = \"student-mat.csv\")\n\nℹ Using \"','\" as decimal and \"'.'\" as grouping mark. Use `read_delim()` for more control.\n\n\nRows: 395 Columns: 33\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr (17): school, sex, address, famsize, Pstatus, Mjob, Fjob, reason, guardi...\ndbl (16): age, Medu, Fedu, traveltime, studytime, failures, famrel, freetime...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\npor_data &lt;- read_csv2(file = \"student-por.csv\")\n\nℹ Using \"','\" as decimal and \"'.'\" as grouping mark. Use `read_delim()` for more control.\nRows: 649 Columns: 33── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr (17): school, sex, address, famsize, Pstatus, Mjob, Fjob, reason, guardi...\ndbl (16): age, Medu, Fedu, traveltime, studytime, failures, famrel, freetime...\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nall_data &lt;- inner_join(mat_data,por_data,by=c(\"school\",\"sex\",\"age\",\"address\",\"famsize\",\"Pstatus\",\"Medu\",\"Fedu\",\"Mjob\",\"Fjob\",\"reason\",\"nursery\",\"internet\"))\n\nWarning in inner_join(mat_data, por_data, by = c(\"school\", \"sex\", \"age\", : Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 79 of `x` matches multiple rows in `y`.\nℹ Row 79 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\nThere is a warning announced, referencing a many-to-many relationship between x and y. Trying again, joining on all variables except G1,G2,G3,paid,absences. Will use this result for all further exercises. Rather than listing all 28 desired vars for join, manually, I will first join on a selection of the two tables without the noted five fields. Then, I will join this result with the original mat and por data to get the additional fields, adjusting the names to include the course type as a suffix (G1 -&gt; G1.mat, G1.por, etc.).\n\n#join the subset first\nall_data &lt;- inner_join(\n  select(mat_data,-c(G1,G2,G3,paid,absences)),\n  select(por_data,-c(G1,G2,G3,paid,absences))\n  )\n\nJoining with `by = join_by(school, sex, age, address, famsize, Pstatus, Medu,\nFedu, Mjob, Fjob, reason, guardian, traveltime, studytime, failures, schoolsup,\nfamsup, activities, nursery, higher, internet, romantic, famrel, freetime,\ngoout, Dalc, Walc, health)`\n\n#add in the missing fields from mat and rename\nall_data &lt;- \n  left_join(\n    all_data,\n    mat_data\n    ) |&gt;\n  rename_with(~ paste(.x,\".mat\",sep=\"\"),\n              .cols = c(G1,G2,G3,paid,absences)\n  )\n\nJoining with `by = join_by(school, sex, age, address, famsize, Pstatus, Medu,\nFedu, Mjob, Fjob, reason, guardian, traveltime, studytime, failures, schoolsup,\nfamsup, activities, nursery, higher, internet, romantic, famrel, freetime,\ngoout, Dalc, Walc, health)`\n\n#similar activity for fields from por\nall_data &lt;- \n  left_join(\n    all_data,\n    por_data\n    ) |&gt;\n  rename_with(~ paste(.x,\".por\",sep=\"\"),\n              .cols = c(G1,G2,G3,paid,absences)\n  )\n\nJoining with `by = join_by(school, sex, age, address, famsize, Pstatus, Medu,\nFedu, Mjob, Fjob, reason, guardian, traveltime, studytime, failures, schoolsup,\nfamsup, activities, nursery, higher, internet, romantic, famrel, freetime,\ngoout, Dalc, Walc, health)`\n\n\n\n\n\nI’d like to study the relationships of grades with these categorical variables:\n\nPstatus: parent’s cohabitation status (binary: ‘T’ - living together or ‘A’ - apart)\nfreetime: free time after school (numeric: from 1 - very low to 5 - very high)\nfamrel: quality of family relationships (numeric: from 1 - very bad to 5 - excellent)\nromantic: with a romantic relationship (binary: yes or no)\n\nImportant note: For some of these fields, I am changing values from 1-5 to labels, but I do not have sufficient access to the original terminology used by survey participants for each value 1,2,3,4,5. I have the label for the 1 and the 5, only. I am adding a typical label for the middle responses, but these are a guess on my part and not suitable for strict interpretation as listed.\nSo, we will convert these to factor fields, for all three tibbles (math, portuguese, combined). To make this modular and clean, I will define a function to do this, then call it for each tibble.\n\n#writing a helper function for this purpose\n\n#factorize_4_fields(myTibble)\n#Takes a tibble as input, modifies the four fields noted above into factors, returns the modified tibble.\n#Expects only a tibble of the por/mat_data dataset, no error checking.\n\nfactorize_4_fields &lt;- function(myTibble) {\n  myTibble &lt;- \n    myTibble |&gt;\n    mutate(\n      Pstatus = factor(Pstatus,\n                       levels=c(\"A\",\"T\"),\n                       labels=c(\"apart\",\"together\")\n                       ),\n      freetime = factor(freetime,\n                        levels=c(1,2,3,4,5),\n                        labels=c(\"1-very low\", \"2-low\", \"3-average\", \"4-high\", \"5-very high\")\n                        ),\n      famrel = factor(famrel,\n                      levels=c(1,2,3,4,5),\n                      labels=c(\"1-very bad\", \"2-bad\", \"3-average\", \"4-good\", \"5-excellent\")\n                      ),\n      romantic = factor(romantic,\n                        levels=c(\"yes\",\"no\"),\n                        labels=c(\"romance\",\"no romance\")\n                        )\n    )\n  return(myTibble)\n}\n\nNow, running this factor mutation for each tibble:\n\nall_data &lt;- \n  all_data |&gt;\n  factorize_4_fields()\n\nmat_data &lt;- \n  mat_data |&gt;\n  factorize_4_fields()\n\npor_data &lt;- \n  por_data |&gt;\n  factorize_4_fields()"
  },
  {
    "objectID": "homework5.html#summarize-data-with-basic-eda",
    "href": "homework5.html#summarize-data-with-basic-eda",
    "title": "homework5",
    "section": "",
    "text": "First, we will look at the data and evaluate whether it makes basic sense. We will also look for missing or malformed values, etc.\n\n\n\nstr(all_data)\n\ntibble [320 × 38] (S3: tbl_df/tbl/data.frame)\n $ school      : chr [1:320] \"GP\" \"GP\" \"GP\" \"GP\" ...\n $ sex         : chr [1:320] \"F\" \"F\" \"F\" \"F\" ...\n $ age         : num [1:320] 18 17 15 16 16 16 17 15 15 15 ...\n $ address     : chr [1:320] \"U\" \"U\" \"U\" \"U\" ...\n $ famsize     : chr [1:320] \"GT3\" \"GT3\" \"GT3\" \"GT3\" ...\n $ Pstatus     : Factor w/ 2 levels \"apart\",\"together\": 1 2 2 2 2 2 1 1 2 2 ...\n $ Medu        : num [1:320] 4 1 4 3 4 2 4 3 3 4 ...\n $ Fedu        : num [1:320] 4 1 2 3 3 2 4 2 4 4 ...\n $ Mjob        : chr [1:320] \"at_home\" \"at_home\" \"health\" \"other\" ...\n $ Fjob        : chr [1:320] \"teacher\" \"other\" \"services\" \"other\" ...\n $ reason      : chr [1:320] \"course\" \"course\" \"home\" \"home\" ...\n $ guardian    : chr [1:320] \"mother\" \"father\" \"mother\" \"father\" ...\n $ traveltime  : num [1:320] 2 1 1 1 1 1 2 1 1 1 ...\n $ studytime   : num [1:320] 2 2 3 2 2 2 2 2 2 2 ...\n $ failures    : num [1:320] 0 0 0 0 0 0 0 0 0 0 ...\n $ schoolsup   : chr [1:320] \"yes\" \"no\" \"no\" \"no\" ...\n $ famsup      : chr [1:320] \"no\" \"yes\" \"yes\" \"yes\" ...\n $ activities  : chr [1:320] \"no\" \"no\" \"yes\" \"no\" ...\n $ nursery     : chr [1:320] \"yes\" \"no\" \"yes\" \"yes\" ...\n $ higher      : chr [1:320] \"yes\" \"yes\" \"yes\" \"yes\" ...\n $ internet    : chr [1:320] \"no\" \"yes\" \"yes\" \"no\" ...\n $ romantic    : Factor w/ 2 levels \"romance\",\"no romance\": 2 2 1 2 2 2 2 2 2 2 ...\n $ famrel      : Factor w/ 5 levels \"1-very bad\",\"2-bad\",..: 4 5 3 4 5 4 4 4 5 3 ...\n $ freetime    : Factor w/ 5 levels \"1-very low\",\"2-low\",..: 3 3 2 3 4 4 1 2 5 3 ...\n $ goout       : num [1:320] 4 3 2 2 2 4 4 2 1 3 ...\n $ Dalc        : num [1:320] 1 1 1 1 1 1 1 1 1 1 ...\n $ Walc        : num [1:320] 1 1 1 2 2 1 1 1 1 2 ...\n $ health      : num [1:320] 3 3 5 5 5 3 1 1 5 2 ...\n $ paid.mat    : chr [1:320] \"no\" \"no\" \"yes\" \"yes\" ...\n $ absences.mat: num [1:320] 6 4 2 4 10 0 6 0 0 0 ...\n $ G1.mat      : num [1:320] 5 5 15 6 15 12 6 16 14 10 ...\n $ G2.mat      : num [1:320] 6 5 14 10 15 12 5 18 15 8 ...\n $ G3.mat      : num [1:320] 6 6 15 10 15 11 6 19 15 9 ...\n $ paid.por    : chr [1:320] \"no\" \"no\" \"no\" \"no\" ...\n $ absences.por: num [1:320] 4 2 0 0 6 0 2 0 0 2 ...\n $ G1.por      : num [1:320] 0 9 14 11 12 13 10 15 12 14 ...\n $ G2.por      : num [1:320] 11 11 14 13 12 12 13 16 12 14 ...\n $ G3.por      : num [1:320] 11 11 14 13 13 13 13 17 13 14 ...\n\n\nLooking at results of a structure str() function, the field names and their values look reasonable. They match the descriptions of the data dictionary. However, we need to adjust the numeric and categorical field types, as many of these fields have a numeric type currently but are truly categorical in nature. To be efficient, I will try to adjust all numeric fields except those I specify, to be coerced to character strings.\n\nall_data &lt;- \n  all_data |&gt;\n  mutate(across(\n           where(is.numeric)\n           & !ends_with(\".mat\")\n           & !ends_with(\".por\")\n           & -c(failures,age),\n           as.character #transform from numeric to char\n           )\n         )\n\n\n\n\nI am concerned that there are only 320 records in the combined data, while both math and portuguese datasets had record volumes exceeding this amount (395, 649, respectively). Thinking through our join methodology, since we used an inner join, this gives us only the students who had data in both courses. That’s not a bad approach and is even necessary for some analyses, so this is acceptable.\n\n\n\nI’ll run psych::describe() to get a sense of the values and their centers, spread, to ensure that looks reasonable. Only the numeric ones.\n\ndescribe(select(all_data,is.numeric))\n\nWarning: Use of bare predicate functions was deprecated in tidyselect 1.1.0.\nℹ Please use wrap predicates in `where()` instead.\n  # Was:\n  data %&gt;% select(is.numeric)\n\n  # Now:\n  data %&gt;% select(where(is.numeric))\n\n\n             vars   n  mean   sd median trimmed  mad min max range  skew\nage             1 320 16.52 1.14     16   16.49 1.48  15  22     7  0.43\nfailures        2 320  0.08 0.39      0    0.00 0.00   0   3     3  5.92\nabsences.mat    3 320  5.41 7.84      4    4.00 5.93   0  75    75  4.25\nG1.mat          4 320 11.29 3.20     11   11.19 2.97   5  19    14  0.27\nG2.mat          5 320 11.18 3.67     11   11.29 2.97   0  19    19 -0.45\nG3.mat          6 320 11.04 4.30     11   11.38 4.45   0  20    20 -0.76\nabsences.por    7 320  3.25 4.56      2    2.33 2.97   0  32    32  2.53\nG1.por          8 320 12.39 2.56     12   12.41 2.97   0  19    19 -0.31\nG2.por          9 320 12.57 2.42     12   12.52 2.97   5  19    14  0.20\nG3.por         10 320 12.88 2.89     13   12.97 2.97   0  19    19 -1.13\n             kurtosis   se\nage              0.35 0.06\nfailures        38.64 0.02\nabsences.mat    27.83 0.44\nG1.mat          -0.70 0.18\nG2.mat           0.62 0.21\nG3.mat           0.75 0.24\nabsences.por     9.37 0.25\nG1.por           1.08 0.14\nG2.por          -0.19 0.14\nG3.por           4.18 0.16\n\n\nThese all look reasonable for their representations of failed classes, number of absences, and grades.\n\n\n\nLet’s check for any NA, though I see the original datasets used here were very clean.\n\ncolSums(is.na(all_data))\n\n      school          sex          age      address      famsize      Pstatus \n           0            0            0            0            0            0 \n        Medu         Fedu         Mjob         Fjob       reason     guardian \n           0            0            0            0            0            0 \n  traveltime    studytime     failures    schoolsup       famsup   activities \n           0            0            0            0            0            0 \n     nursery       higher     internet     romantic       famrel     freetime \n           0            0            0            0            0            0 \n       goout         Dalc         Walc       health     paid.mat absences.mat \n           0            0            0            0            0            0 \n      G1.mat       G2.mat       G3.mat     paid.por absences.por       G1.por \n           0            0            0            0            0            0 \n      G2.por       G3.por \n           0            0 \n\n\nAll clean, no missing values in any field.\n\n\n\n\n\n\nThese are easy to create using table() so there isn’t much preamble needed. Interpretation afterward. These are built with BaseR.\n\ntable(all_data['Pstatus'])\n\nPstatus\n   apart together \n      31      289 \n\n\nThis one-way contingency table simply tells us that most of the studied students’ parents lived together (289) while a smaller count did not (31). The numbers are basic counts of each element of the field Pstatus.\n\ntable(all_data[c('Pstatus','romantic')])\n\n          romantic\nPstatus    romance no romance\n  apart         13         18\n  together      86        203\n\n\nThis two-way table shows the split of the prior table by the romance / no romance values. Of the 31 students whose parents lived separately, 13 students were in a romantic relationship. That’s interesting, as a percentage of the total, because the share of romance / no romance is much closer for the apart group than the share for the together group.\n\ntable(all_data[c('Pstatus','romantic','famrel')])\n\n, , famrel = 1-very bad\n\n          romantic\nPstatus    romance no romance\n  apart          2          0\n  together       3          1\n\n, , famrel = 2-bad\n\n          romantic\nPstatus    romance no romance\n  apart          1          1\n  together       3          8\n\n, , famrel = 3-average\n\n          romantic\nPstatus    romance no romance\n  apart          2          3\n  together      12         35\n\n, , famrel = 4-good\n\n          romantic\nPstatus    romance no romance\n  apart          4          9\n  together      48         96\n\n, , famrel = 5-excellent\n\n          romantic\nPstatus    romance no romance\n  apart          4          5\n  together      20         63\n\n\nThe three-way contingency table with a 5-element field is much harder to interpret. Looking at the 1-very bad relationship group, 2 students have separated parents and are in a romantic relationship. While the volumes for the 1-very bad group are low, it is the only level of family relationship where the total romance-active students exceeds that of no-romance students.\n\n\n\nFirst, creating this via table() and a filter.\n\ntable_cond_2way_a &lt;- filter(all_data,famrel==\"1-very bad\")\ntable(table_cond_2way_a[c('Pstatus','romantic')])\n\n          romantic\nPstatus    romance no romance\n  apart          2          0\n  together       3          1\n\n\nThis looks like our sample above, reflecting only the counts of the filtered student data.\nCreating this another way, I’ll make the 3-way table and then subset it:\n\ntable_cond_2way &lt;- table(all_data[c('Pstatus','romantic','famrel')])\ntable_cond_2way[,,1]\n\n          romantic\nPstatus    romance no romance\n  apart          2          0\n  together       3          1\n\n\nLooks good.\n\n\n\nI will make these using group_by() and summarize() to test other methods.\n\ntable_dplyr &lt;- \n  all_data |&gt;\n  group_by(Pstatus,romantic) |&gt;\n  summarize(count = n())\n\n`summarise()` has grouped output by 'Pstatus'. You can override using the\n`.groups` argument.\n\ntable_dplyr\n\n# A tibble: 4 × 3\n# Groups:   Pstatus [2]\n  Pstatus  romantic   count\n  &lt;fct&gt;    &lt;fct&gt;      &lt;int&gt;\n1 apart    romance       13\n2 apart    no romance    18\n3 together romance       86\n4 together no romance   203\n\n\nThe values match but the display format does not. pivot_wider will adjust this to mimic the prior result from BaseR, the typical display for a contingency table.\n\ntable_dplyr &lt;- pivot_wider(table_dplyr,names_from = \"romantic\",values_from = \"count\")\ntable_dplyr\n\n# A tibble: 2 × 3\n# Groups:   Pstatus [2]\n  Pstatus  romance `no romance`\n  &lt;fct&gt;      &lt;int&gt;        &lt;int&gt;\n1 apart         13           18\n2 together      86          203\n\n\nMatches the original display of table().\n\n\n\nNow, using ggplot2 I will display a stacked bar graph and side-by-side variant of the same. Good labels for the axes and a title, too.\n\ng &lt;- ggplot(all_data,\n            aes(x=Pstatus,\n                fill=romantic\n                )\n            )\ng + \n  geom_bar(position=\"stack\") +\n  labs(\n    x=\"Cohabitation Status of Parents\",\n    y=\"Count of Students\",\n    fill=\"Student Romance\",\n    title = \"Cohabitation State of Parents & Student Romance Status\")\n\n\n\n\n\n\n\n\n\ng + \n  geom_bar(position=\"dodge\") +\n  labs(\n    x=\"Cohabitation Status of Parents\",\n    y=\"Count of Students\",\n    fill=\"Student Romance\",\n    title = \"Cohabitation State of Parents & Student Romance Status\") \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFirst, calculating basic measures of center and spread for three vars:\n\nall_data |&gt;\n  select(age,G3.mat,G3.por) |&gt;\n  summarize(across(everything(),\n                   list(\"mean\"=mean,\n                        \"median\"=median,\n                        \"sd\"=sd,\n                        \"IQR\"=IQR),\n                   .names=\"{.col}-{.fn}\"\n                   )\n            )\n\n# A tibble: 1 × 12\n  `age-mean` `age-median` `age-sd` `age-IQR` `G3.mat-mean` `G3.mat-median`\n       &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;         &lt;dbl&gt;           &lt;dbl&gt;\n1       16.5           16     1.14         1          11.0              11\n# ℹ 6 more variables: `G3.mat-sd` &lt;dbl&gt;, `G3.mat-IQR` &lt;dbl&gt;,\n#   `G3.por-mean` &lt;dbl&gt;, `G3.por-median` &lt;dbl&gt;, `G3.por-sd` &lt;dbl&gt;,\n#   `G3.por-IQR` &lt;dbl&gt;\n\n\nLooking at age, we know most students are about 16, +/- 1. Now, let’s see the summary results for these students when we only assess those with a romantic relationship.\n\nall_data |&gt;\n  filter(romantic==\"romance\") |&gt;\n  select(age,G3.mat,G3.por) |&gt;\n  summarize(across(everything(),\n                   list(\"mean\"=mean,\n                        \"median\"=median,\n                        \"sd\"=sd,\n                        \"IQR\"=IQR),\n                   .names=\"{.col}-{.fn}\"\n                   )\n            )\n\n# A tibble: 1 × 12\n  `age-mean` `age-median` `age-sd` `age-IQR` `G3.mat-mean` `G3.mat-median`\n       &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;         &lt;dbl&gt;           &lt;dbl&gt;\n1       16.8           17     1.15         2          10.4              11\n# ℹ 6 more variables: `G3.mat-sd` &lt;dbl&gt;, `G3.mat-IQR` &lt;dbl&gt;,\n#   `G3.por-mean` &lt;dbl&gt;, `G3.por-median` &lt;dbl&gt;, `G3.por-sd` &lt;dbl&gt;,\n#   `G3.por-IQR` &lt;dbl&gt;\n\n\nThis result shows higher typical ages for students in a romantic relationship, along with noticeably lower final math grades but comparable language grades.\n\n\n\nNow, let’s compare these results for both of the romance states of students.\n\nall_data |&gt;\n  group_by(romantic) |&gt;\n  select(age,G3.mat,absences.mat) |&gt;\n  summarize(across(everything(),\n                   list(\"mean\"=mean,\n                        \"median\"=median,\n                        \"sd\"=sd,\n                        \"IQR\"=IQR),\n                   .names=\"{.col}-{.fn}\"\n                   )\n            )\n\nAdding missing grouping variables: `romantic`\n\n\n# A tibble: 2 × 13\n  romantic   `age-mean` `age-median` `age-sd` `age-IQR` `G3.mat-mean`\n  &lt;fct&gt;           &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;         &lt;dbl&gt;\n1 romance          16.8           17     1.15         2          10.4\n2 no romance       16.4           16     1.11         2          11.3\n# ℹ 7 more variables: `G3.mat-median` &lt;dbl&gt;, `G3.mat-sd` &lt;dbl&gt;,\n#   `G3.mat-IQR` &lt;dbl&gt;, `absences.mat-mean` &lt;dbl&gt;, `absences.mat-median` &lt;dbl&gt;,\n#   `absences.mat-sd` &lt;dbl&gt;, `absences.mat-IQR` &lt;dbl&gt;\n\n\nThere are higher numbers of absences associated with those students in romantic relationships, though with a much larger spread (and a smaller sample size).\n\n\n\nNow, let’s group additionally by famrel.\n\nall_data |&gt;\n  group_by(romantic,famrel) |&gt;\n  select(age,G3.mat,G3.por) |&gt;\n  summarize(across(everything(),\n                   list(\"mean\"=mean,\n                        \"median\"=median,\n                        \"sd\"=sd,\n                        \"IQR\"=IQR),\n                   .names=\"{.col}-{.fn}\"\n                   )\n            )\n\nAdding missing grouping variables: `romantic`, `famrel`\n`summarise()` has grouped output by 'romantic'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 10 × 14\n# Groups:   romantic [2]\n   romantic   famrel    `age-mean` `age-median` `age-sd` `age-IQR` `G3.mat-mean`\n   &lt;fct&gt;      &lt;fct&gt;          &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;         &lt;dbl&gt;\n 1 romance    1-very b…       16.2           16    1.30       2            13   \n 2 romance    2-bad           17             17    0.816      0.5          12.5 \n 3 romance    3-average       16.8           17    0.975      0.75         10.6 \n 4 romance    4-good          16.9           17    1.00       2            10.2 \n 5 romance    5-excell…       16.8           17    1.56       2             9.79\n 6 no romance 1-very b…       16             16   NA          0            12   \n 7 no romance 2-bad           16.3           16    1.22       1             9.56\n 8 no romance 3-average       16.2           16    0.896      1            11.4 \n 9 no romance 4-good          16.4           16    1.16       2            11.3 \n10 no romance 5-excell…       16.4           16    1.15       2            11.6 \n# ℹ 7 more variables: `G3.mat-median` &lt;dbl&gt;, `G3.mat-sd` &lt;dbl&gt;,\n#   `G3.mat-IQR` &lt;dbl&gt;, `G3.por-mean` &lt;dbl&gt;, `G3.por-median` &lt;dbl&gt;,\n#   `G3.por-sd` &lt;dbl&gt;, `G3.por-IQR` &lt;dbl&gt;\n\n\nWell, with one of my variables having 5 levels, this output is hard to read. Further, I wish strongly that I could add in the count of students in each grouping but I can’t figure out how. With the levels of famrel ordered as factors, we can see a lightly-apparent trend that age is positively correlated to quality of family relationships.\n\n\n\nThis may be hard to read, but now we will make a correlation matrix for all numeric variables. I don’t recall this being in the lesson, but I reviewed how to use cor() to do this.\n\ncor(all_data[sapply(all_data,is.numeric)]) \n\n                      age   failures absences.mat      G1.mat      G2.mat\nage           1.000000000  0.2434296   0.14392517 -0.11037935 -0.18618740\nfailures      0.243429617  1.0000000   0.12006863 -0.19581035 -0.16669179\nabsences.mat  0.143925170  0.1200686   1.00000000 -0.06946116 -0.07580245\nG1.mat       -0.110379348 -0.1958103  -0.06946116  1.00000000  0.86588796\nG2.mat       -0.186187399 -0.1666918  -0.07580245  0.86588796  1.00000000\nG3.mat       -0.206031862 -0.1430320  -0.02811847  0.81859418  0.91357599\nabsences.por  0.047331821  0.1342426   0.56381559 -0.08760610 -0.12636236\nG1.por       -0.050549678 -0.2692766  -0.09247761  0.59293522  0.54300736\nG2.por        0.029366456 -0.2699260  -0.14516402  0.59517224  0.56521350\nG3.por       -0.009103257 -0.3277569  -0.13572638  0.54388734  0.49603265\n                  G3.mat absences.por      G1.por      G2.por       G3.por\nage          -0.20603186   0.04733182 -0.05054968  0.02936646 -0.009103257\nfailures     -0.14303203   0.13424264 -0.26927657 -0.26992597 -0.327756897\nabsences.mat -0.02811847   0.56381559 -0.09247761 -0.14516402 -0.135726385\nG1.mat        0.81859418  -0.08760610  0.59293522  0.59517224  0.543887345\nG2.mat        0.91357599  -0.12636236  0.54300736  0.56521350  0.496032649\nG3.mat        1.00000000  -0.11664046  0.52288461  0.54545279  0.475956497\nabsences.por -0.11664046   1.00000000 -0.09864117 -0.12070727 -0.071452010\nG1.por        0.52288461  -0.09864117  1.00000000  0.88415041  0.825414320\nG2.por        0.54545279  -0.12070727  0.88415041  1.00000000  0.894309821\nG3.por        0.47595650  -0.07145201  0.82541432  0.89430982  1.000000000\n\n\n\n\n\nI will create these for the numeric variables absences.mat and G3.mat, for categorical variable freetime.\nFirst, the charts for absences.mat, beginning with the kernel density function. I’ll display all three types and then interpret briefly.\n\ng_G3.mat &lt;- ggplot(all_data,\n                         aes(x=absences.mat)\n                         )\n\ng_G3.mat + \n  geom_density(\n    kernel=\"gaussian\",\n    alpha=0.5,\n    aes(\n      fill=freetime\n      )\n    ) +\n  labs(\n    title=\"Density of Students by Math Absences and Freetime\",\n    x=\"Math Absences\",\n    y=\"Population Density\",\n    fill=\"Freetime\"\n  )\n\n\n\n\n\n\n\n\nNext, histogram:\n\ng_G3.mat +\n  geom_histogram(\n    aes(\n      fill=freetime\n    ),\n    binwidth=2,\n    position=\"identity\",\n    alpha=0.65\n  ) +\n    labs(\n    title=\"Histogram of Students by Math Absences and Freetime\",\n    x=\"Math Absences\",\n    y=\"Count of Students\",\n    fill=\"Freetime\"\n  )\n\n\n\n\n\n\n\n\nAnd the boxplot:\n\ng_G3.mat +\n  geom_boxplot(\n    aes(\n      x = absences.mat,\n      fill=freetime)\n  ) +\n    labs(\n    title=\"Boxplot of Math Absences by Freetime\",\n    x=\"Math Absences\",\n    fill=\"Freetime\"\n  ) +\n  theme(axis.text.y = element_blank())\n\n\n\n\n\n\n\n\nLooking at the three charts for this data, I find the histogram (as displayed) to be hard to read and interpret. The boxplot is great and shows, unexpectedly, the greater IQR for Math absences by students with lots of free time. The density chart shows this, too. It’s hard to take any further interpretation from this as the differences are small and the charts could use tweaking for better clarity.\nNow, the charts for G3.mat. Again, I’ll display all three types and then interpret briefly.\n\ng_G3.mat &lt;- ggplot(all_data,\n                         aes(x=G3.mat)\n                         )\n\ng_G3.mat + \n  geom_density(\n    kernel=\"gaussian\",\n    alpha=0.5,\n    aes(\n      fill=freetime\n      )\n    ) +\n  labs(\n    title=\"Density of Students by Math Final and Freetime\",\n    x=\"Math Final\",\n    y=\"Population Density\",\n    fill=\"Freetime\"\n  )\n\n\n\n\n\n\n\n\nNext, histogram:\n\ng_G3.mat +\n  geom_histogram(\n    aes(\n      fill=freetime\n    ),\n    binwidth=2,\n    position=\"identity\",\n    alpha=0.65\n  ) +\n    labs(\n    title=\"Histogram of Students by Math Final and Freetime\",\n    x=\"Math Final\",\n    y=\"Count of Students\",\n    fill=\"Freetime\"\n  )\n\n\n\n\n\n\n\n\nAnd the boxplot:\n\ng_G3.mat +\n  geom_boxplot(\n    aes(\n      x = G3.mat,\n      fill=freetime)\n  ) +\n    labs(\n    title=\"Boxplot of Math Final by Freetime\",\n    x=\"Math Final\",\n    fill=\"Freetime\"\n  ) +\n  theme(axis.text.y = element_blank())\n\n\n\n\n\n\n\n\nThese results present a similar experience for interpretation. The histogram is harder to read, while the box and density plots show a clear positive trend between the more free time and the final math grade of the students.\n\n\n\nNext, two scatterplots, one to compare G2 and G3 for math, the other to compare G3.mat with absences in language. I expect the first one to be strongly positively correlated and the second to be fairly strongly negatively correlated. I’ll color the points according to categorical variables Pstatus and freetime.\n\ng_G3.mat +\n  geom_point(\n    aes(\n      x=G2.mat,\n      y=G3.mat,\n      color=Pstatus),\n    position = \"jitter\"\n  ) +\n    labs(\n    title=\"Scatter of Math Final by Math First Grade by Parental Cohabitation\",\n    x=\"Math First Grade\",\n    y=\"Math Final Grade\",\n    color=\"Parents Cohabitation Status\"\n  )\n\n\n\n\n\n\n\n\nAbove, the strong correlation is clear; it is likely that the first math grade of the session grows as does the final math grade. Also, the cohabitation status coloring shows no clear difference between the states of apart / together.\n\ng_G3.mat +\n  geom_point(\n    aes(\n      x=absences.por,\n      y=G3.mat,\n      shape=freetime,color=freetime\n      ),\n    position = \"jitter\"\n  ) +\n    labs(\n      title=\"Scatter of Math Final by Language Absences by Student Freetime\",\n      x=\"Absences in Language\",\n      y=\"Math Final Grade\",\n      color=\"Student Freetime\",\n      shape=\"Student Freetime\"\n  )\n\n\n\n\n\n\n\n\nThis is very hard to read! Generally, it looks like the two numeric variables are negatively correlated, slightly. As for the relation of freetime with these, it’s too hard to see here. Even increasing the jitter would not make it much cleaner. There might be ways to group the data points to make fewer appear.\n\n\n\nLast, let’s repeat these with faceting graphs, first at each setting of another cat variable, and then at each combination of two cat variables.\n\ng_G3.mat +\n  geom_point(\n    aes(\n      x=G2.mat,\n      y=G3.mat,\n      color=Pstatus),\n    position = \"jitter\"\n  ) +\n    labs(\n    title=\"Scatter of Math Final by Math First Grade by Parental Cohabitation\",\n    subtitle=\"Faceted by Family Relationship Strength\",\n    x=\"Math First Grade\",\n    y=\"Math Final Grade\",\n    color=\"Parents Cohabitation Status\"\n  ) +\n  facet_wrap(~ famrel)\n\n\n\n\n\n\n\n\nThat is so much better! The faceted charts here clearly suggest minimal impact of the Family Relationship Strength on the other variables. I love that ggplot2 ensures consistency of axes across facets, natively.\n\ng_G3.mat +\n  geom_point(\n    aes(\n      x=absences.por,\n      y=G3.mat,\n      shape=freetime,color=freetime\n      ),\n    position = \"jitter\"\n  ) +\n    labs(\n      title=\"Scatter of Math Final by Language Absences by Student Freetime\",\n      x=\"Absences in Language\",\n      y=\"Math Final Grade\",\n      color=\"Student Freetime\",\n      shape=\"Student Freetime\"\n  ) +\n  facet_wrap(~ romantic)\n\n\n\n\n\n\n\n\nThis is hard to read, again, so I’m going to switch faceting to the freetime dimension:\n\ng_G3.mat +\n  geom_point(\n    aes(\n      x=absences.por,\n      y=G3.mat,\n      shape=romantic,color=romantic\n      ),\n    position = \"jitter\"\n  ) +\n    labs(\n      title=\"Scatter of Math Final by Language Absences by Romantic Status\",\n      subtitle=\"Faceted by Freetime Levels\",\n      x=\"Absences in Language\",\n      y=\"Math Final Grade\",\n      color=\"Romantic Status\",\n      shape=\"Romantic Status\"\n  ) +\n  facet_wrap(~ freetime)\n\n\n\n\n\n\n\n\nBetter, again, as a display. Hard still to interpret, even so. At a glance, I can’t tell any strong relationship here between freetime and either numeric variable. It would require more study to understand the strength of any correlation between freetime and romance.\nLastly, we’ll combine these at combinations of two categorical variables.\n\ng_G3.mat +\n  geom_point(\n    aes(\n      x=G2.mat,\n      y=G3.mat,\n      color=Pstatus),\n    position = \"jitter\"\n  ) +\n    labs(\n    title=\"Scatter of Math Final by Math First Grade by Parental Cohabitation\",\n    subtitle=\"Faceted by Family Relationship Strength & Romantic Status\",\n    x=\"Math First Grade\",\n    y=\"Math Final Grade\",\n    color=\"Parents Cohabitation Status\"\n  ) +\n  facet_grid(~ famrel ~ romantic)\n\n\n\n\n\n\n\n\nToo much info! Or just no clear relationships to interpret. Actually, no, I do see that no romance tends to offer some of the highest scores in the range, both in first and also final math grades. But that would have been easier to identify without the noise of the additional variables here!\n\ng_G3.mat +\n  geom_point(\n    aes(\n      x=absences.por,\n      y=G3.mat,\n      shape=romantic,color=romantic\n      ),\n    position = \"jitter\"\n  ) +\n    labs(\n      title=\"Scatter of Math Final by Language Absences by Romantic Status\",\n      subtitle=\"Faceted by Freetime Levels and Parental Cohabitation Status\",\n      x=\"Absences in Language\",\n      y=\"Math Final Grade\",\n      color=\"Romantic Status\",\n      shape=\"Romantic Status\"\n  ) +\n  facet_grid(~ freetime ~ Pstatus)\n\n\n\n\n\n\n\n\nEasy, as before, to see little relationship between the two numeric variables. Looking at parental cohabitation, there is no clear takeaway for me. I don’t see anything telling for any comparison of the variables shown here, but I also must acknowledge the small sample size in the apart group which precludes strong interpretations there, regardless."
  }
]